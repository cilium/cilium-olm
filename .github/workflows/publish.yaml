name: Publish release
on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to be published (format: '1.12.3')"
        required: true

env:
  VERSION: ${{ github.event.inputs.version }}
  IMAGE_REPOSITORY: quay.io/redhat-isv-containers/5fbe31ec8b7d4976604cbde0

jobs:
  build-and-publish:
    env:
      PREFLIGHT_VERSION: 1.2.1
      PFLT_DOCKERCONFIG: ~/.docker/config.json
    name: Build Images, Validate Images, and Publish
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b
        with:
          fetch-depth: 0

      - name: Set image tag environment variable
        run: |
          IMAGE_TAG=$(yq .spec.install.spec.deployments[0].spec.template.spec.containers[0].image bundles/cilium.v${{ env.VERSION }}/manifests/cilium.clusterserviceversion.yaml | cut -d ':' -f 2)
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@8c0edbc76e98fa90f69d9a2c020dcb50019dc325

      - name: Login to Quay.io
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: quay.io
          username: ${{ secrets.RHCP_OLM_REGISTRY_USERNAME }}
          password: ${{ secrets.RHCP_OLM_REGISTRY_PASSWORD }}

      - name: Build image and push
        uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5
        with:
          context: ./operator/cilium.v${{ env.VERSION }}/
          push: true
          tags: ${{ env.IMAGE_REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Install Preflight
        run: |
          curl https://github.com/redhat-openshift-ecosystem/openshift-preflight/releases/download/${{ env.PREFLIGHT_VERSION }}/preflight-linux-amd64 -o preflight-linux-amd64
          sha256sum --check .github_workflow_assets/preflight-linux-amd64.sha256sum
          sudo chmod +x preflight-linux-amd64
          sudo mv preflight-linux-amd64 /usr/local/bin/preflight

      - name: Run Preflight
        run: |
          preflight check container \
            --pyxis-api-token=${{ secrets.RHCP_PREFLIGHT_API_KEY }} \
            --submit \
            --certification-project-id=${{ secrets.RHCP_CERTIFICATION_PROJECT_ID }} \
            ${{ env.IMAGE_REPOSITORY }}:${{ env.IMAGE_TAG }}
